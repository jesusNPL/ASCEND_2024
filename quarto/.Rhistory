#| eval: true
# Package vector names
packages <- c("tidyverse", "ape", "geiger", "ggnewscale",
"phytools", "neonUtilities", "devtools")
#| eval: true
# Install packages not yet installed
# get packages already installed
installed_packages <- packages %in% rownames(installed.packages())
# If the packages are installed skip if not install them
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages], dependencies = TRUE)
}
#| eval: true
if ( ! ("V.PhyloMaker" %in% installed.packages())) {remotes::install_github("jinyizju/V.PhyloMaker")}
#| eval: true
library(tidyverse)
library(ape)
library(geiger)
library(nlme)
library(phytools)
library(neonUtilities)
library(V.PhyloMaker)
## Trait data
nimbiosData <- read_csv("~/Library/CloudStorage/Dropbox/spectra/NIMBIOS/NIMBioS_spec.csv")
View(nimbiosData)
nimbiosData %>% sample_frac(20)
nimbiosData %>% sample_frac(0.20)
nimbiosData %>% sample_frac(0.25)
nimbiosData <- nimbiosData %>% sample_frac(0.25)
View(nimbiosData)
nimbiosData <- nimbiosData %>% select(-1)
View(nimbiosData)
nimbiosTree <- read.nexus("~/Library/CloudStorage/Dropbox/spectra/NIMBIOS/NIMBIOStree.tre")
nimbiosTree <- read.tree("~/Library/CloudStorage/Dropbox/spectra/NIMBIOS/NIMBIOStree.tre")
write.nexus(nimbiosTree, file = "../data/NIMBioS_phylogeny.nex")
View(nimbiosData)
write_csv(nimbiosData, file = "../data/NIMBioS_spectra_sample.csv")
rm(list = ls())
#| eval: true
## Trait data
nimbiosData <- read_csv("../data/NEON_airborne_spectra_CLEAN_NAS.csv") %>%
column_to_rownames("species")
## Phylogenetic data
nimbiosTree <- read.nexus("../data/NIMBioS_phylogeny.nex")
#| eval: true
## Trait data
nimbiosData <- read_csv("../data/NIMBios_spectra_sample.csv") %>%
column_to_rownames("species")
## Phylogenetic data
nimbiosTree <- read.nexus("../data/NIMBioS_phylogeny.nex")
#| eval: true
nimbiosData[1:10, 1:5]
#| eval: true
tmp <- name.check(phy = nimbiosTree, data = nimbiosData)
# print the results
head(tmp$tree_not_data, 10)
tmp
tmp$data_not_tree
nimbiosTree <- drop.tip(phy = nimbiosTree, tip = tmp$tree_not_data)
name.check(phy = nimbiosTree, data = nimbiosData)
#| eval: true
plot(ladderize(nimbiosTree))
axisPhylo()
nimbiosTree
#| eval: true
plot.phylo(ladderize(nimbiosTree),
no.margin = TRUE,
cex = 0.5)
axisPhylo()
#| eval: true
plot.phylo(nimbiosTree,
type = "fan",
no.margin = TRUE,
cex = 0.5)
#| eval: true
plot.phylo(nimbiosTree,
type = "fan",
no.margin = TRUE,
cex = 0.5,
label.offset = 0.1,
show.tip.label = TRUE)
nodelabels(cex = 0.3)
#tiplabels(cex = 0.5)
#| eval: true
#nimbiosData # this will show you the first few rows of your data matrix and its header
nimbiosData %>%
dimnames() # this will show you the row and column headers for your matrix
#nimbiosData %>%
# View() # this will let you visualize the entire matrix
#| eval: true
wl400 <- nimbiosData[, "400"]
names(wl400) <- rownames(nimbiosData)
# data vectors have to be labelled with tip names for the associated tree.
# This is how to do that.
#| eval: true
hist(wl400)
#| eval: true
brownianModel <- fitContinuous(phy = nimbiosTree,
dat = wl400)
brownianModel # this will show you the fit statistics and parameter values
#| eval: true
## Calculate number of trait shifts
obj <- contMap(nimbiosTree,
wl400,
fsize = 0.1,
lwd = 1.5,
type = "fan",
plot = FALSE)
# change colors
obj <- setMap(obj,
c("white", "#FFFFB2", "#FECC5C", "#FD8D3C", "#E31A1C"))
# Plot the results
plot(obj,
fsize = c(0.1, 0.8),
leg.txt = "Wavelength 402")
#| eval: true
brownianModel <- fitContinuous(phy = nimbiosTree,
dat = wl400, # trait
model = "BM") # evolutionary model
#| eval: true
OUModel <- fitContinuous(phy = nimbiosTree,
dat = wl400,
model = "OU")
#| eval: true
EBModel <- fitContinuous(phy = nimbiosTree,
dat = wl400,
model = "EB")
#| eval: true
brownianModel
OUModel
EBModel
#| eval: true
# Vector of models
mods <- c(brownianModel$opt$aicc, OUModel$opt$aicc, EBModel$opt$aicc)
# rename the models
names(mods) <- c("BM", "OU", "EB")
# Run AIC weights
aicw(mods)
#| eval: true
library(knitr)
aic_wl400 <- aicw(mods)
names(aic_wl400)[1] <- "AIC"
aic_wl400$lnL <- c(brownianModel$opt$lnL, OUModel$opt$lnL, EBModel$opt$lnL)
kable(aic_wl400)
#| eval: true
# Run Blomber's K
K_wl400 <- phylosig(tree = nimbiosTree, # Phylogeny
x = wl400, # trait
method = "K", # method
test = TRUE)
# Print results
print(K_wl400)
#| eval: true
# Plot results
plot(K_wl400)
#| eval: true
# Run Pagel's Lambda
LB_wl400 <- phylosig(tree = nimbiosTree, # Phylogeny
x = wl400, # trait
method = "lambda",
test = TRUE)
# Print the results
print(LB_wl400)
# Plot thre results
plot(LB_wl400)
#| eval: true
### Check info
setdiff(nimbiosTree$tip.label, rownames(nimbiosData))
### Assign rownames to column
nimbiosData <- nimbiosData %>%
rownames_to_column("species")
View(nimbiosData)
ncol(nimbiosData)
### Run Blomberg's K
### Load wrapper functions
source("https://raw.githubusercontent.com/jesusNPL/SpecEvolution/main/R/wrappers.R")
# run only 10 bands
NEON_HS_PhyloSig <- demon_K(spectra = nimbiosData, # spectra in data.frame
tree = nimbiosTree, # phylogeny
nSIM = 1000, # number of simulations
nBands = 201) # number of bands
write_csv(NEON_HS_PhyloSig , file = "../output/NIMBios_K_phylosig.csv")
## Transform the long format
NIMBioS_spectra_long <- nimbiosData %>%
pivot_longer(!species,
names_to = "wavelength",
values_to = "reflectance")
View(NIMBioS_spectra_long)
glimpse(nimbiosData)
glimpse(NIMBioS_spectra_long)
NiMBIOS_phylosig %>%
mutate(Pval_cat = if_else(K_pval <= 0.05, "diff", "no_diff")) %>%
mutate(wavelength = Band) %>%
mutate(species = Pval_cat) %>%
select(Band, wavelength, Pval_cat, species, everything()) %>%
# Rename P-Values column to "species" to match column in the spectra (only for plot).
mutate(extra_y = 0.15, "Blomberg's K" = K_obs)
## Load phylogenetic signal
NIMBioS_PhyloSig <- read_csv("../output/NIMBios_K_phylosig.csv")
NiMBIOS_phylosig %>%
mutate(Pval_cat = if_else(K_pval <= 0.05, "diff", "no_diff")) %>%
mutate(wavelength = Band) %>%
mutate(species = Pval_cat) %>%
select(Band, wavelength, Pval_cat, species, everything()) %>%
# Rename P-Values column to "species" to match column in the spectra (only for plot).
mutate(extra_y = 0.15, "Blomberg's K" = K_obs)
NIMBIOS_phylosig <- NIMBIOS_phylosig %>%
mutate(Pval_cat = if_else(K_pval <= 0.05, "diff", "no_diff")) %>%
mutate(wavelength = Band) %>%
mutate(species = Pval_cat) %>%
select(Band, wavelength, Pval_cat, species, everything()) %>%
# Rename P-Values column to "species" to match column in the spectra (only for plot).
mutate(extra_y = 0.15, "Blomberg's K" = K_obs)
## Load phylogenetic signal
NIMBioS_PhyloSig <- read_csv("../output/NIMBios_K_phylosig.csv")
NIMBIOS_phylosig <- NIMBIOS_phylosig %>%
mutate(Pval_cat = if_else(K_pval <= 0.05, "diff", "no_diff")) %>%
mutate(wavelength = Band) %>%
mutate(species = Pval_cat) %>%
select(Band, wavelength, Pval_cat, species, everything()) %>%
# Rename P-Values column to "species" to match column in the spectra (only for plot).
mutate(extra_y = 0.15, "Blomberg's K" = K_obs)
NIMBioS_PhyloSig <- NIMBioS_PhyloSig %>%
mutate(Pval_cat = if_else(K_pval <= 0.05, "diff", "no_diff")) %>%
mutate(wavelength = Band) %>%
mutate(species = Pval_cat) %>%
select(Band, wavelength, Pval_cat, species, everything()) %>%
# Rename P-Values column to "species" to match column in the spectra (only for plot).
mutate(extra_y = 0.15, "Blomberg's K" = K_obs)
NEON_HS_long %>%
ggplot(aes(x = as.numeric(wavelength),
y = reflectance,
colour = factor(species)
)) +
geom_line(linewidth = 0.5, alpha = 0.5, show.legend = FALSE) +
scale_colour_viridis_d(option = "turbo", direction = -1)
NIMBioS_spectra_long %>%
ggplot(aes(x = as.numeric(wavelength),
y = reflectance,
colour = factor(species)
)) +
geom_line(linewidth = 0.5, alpha = 0.5, show.legend = FALSE) +
scale_colour_viridis_d(option = "turbo", direction = -1)
#| eval: true
### Plot mean species and Blomberg's K values
library(ggnewscale)
p_ps_K <- NIMBioS_spectra_long %>%
ggplot(aes(x = as.numeric(wavelength),
y = reflectance,
colour = factor(species)
)) +
geom_line(linewidth = 0.5, alpha = 0.5, show.legend = FALSE) +
scale_colour_viridis_d(option = "turbo", direction = -1) +
# add a new scale color
new_scale_color() +
# plot phylogenetic signal
geom_point(aes(x = as.numeric(WL_num),
y = extra_y,
color = species,
size = `Blomberg's K`), # Pval_cat = species
data = NIMBioS_PhyloSig,
inherit.aes = FALSE) +
scale_color_manual(name = "P-value",
labels = c("< 0.05", "> 0.05"),
values = c("no_diff" = "black", "diff" = "red")) +
guides(color = guide_legend(override.aes = list(size = 5))) +
xlab("Wavelength (nm)") +
scale_y_continuous(
# Features of the first axis
name = "Reflectance",
# Add a second axis and specify its features
# sec.axis = sec_axis(trans = ~.*1, name = "Blomberg's K")
) +
annotate("rect",
xmin = 400, xmax = 700, # Visible
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 559:560, y = 0.2, label = "VIS", size  = 7) +
annotate("rect",
xmin = 800, xmax = 1340, # NIR
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 1070:1071, y = 0.2, label = "NIR", size  = 7) +
annotate("rect",
xmin = 1445, xmax = 1790, # SWIR 1
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 1620:1621, y = 0.2, label = "SWIR1", size  = 7) +
annotate("rect",
xmin = 1955, xmax = 2400, # SWIR 2
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 2170:2171, y = 0.2, label = "SWIR2", size  = 7) +
theme_minimal() +
theme(
legend.position = "right",
legend.text = element_text(size = 18),
legend.title = element_text(size = 20),
axis.text = element_text(size = 17, colour = "black"),
axis.title = element_text(size = 20),
plot.title = element_text(size = 20, vjust = -12, hjust = 0.05),
plot.subtitle = element_text(size = 20, vjust = -10, hjust = 0.05)
)
p_ps_K
NIMBioS_PhyloSig
p_ps_K <- NIMBioS_spectra_long %>%
ggplot(aes(x = as.numeric(wavelength),
y = reflectance,
colour = factor(species)
)) +
geom_line(linewidth = 0.5, alpha = 0.5, show.legend = FALSE) +
scale_colour_viridis_d(option = "turbo", direction = -1) +
# add a new scale color
new_scale_color() +
# plot phylogenetic signal
geom_point(aes(x = wavelength,
y = extra_y,
color = species,
size = `Blomberg's K`), # Pval_cat = species
data = NIMBioS_PhyloSig,
inherit.aes = FALSE) +
scale_color_manual(name = "P-value",
labels = c("< 0.05", "> 0.05"),
values = c("no_diff" = "black", "diff" = "red")) +
guides(color = guide_legend(override.aes = list(size = 5))) +
xlab("Wavelength (nm)") +
scale_y_continuous(
# Features of the first axis
name = "Reflectance",
# Add a second axis and specify its features
# sec.axis = sec_axis(trans = ~.*1, name = "Blomberg's K")
) +
annotate("rect",
xmin = 400, xmax = 700, # Visible
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 559:560, y = 0.2, label = "VIS", size  = 7) +
annotate("rect",
xmin = 800, xmax = 1340, # NIR
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 1070:1071, y = 0.2, label = "NIR", size  = 7) +
annotate("rect",
xmin = 1445, xmax = 1790, # SWIR 1
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 1620:1621, y = 0.2, label = "SWIR1", size  = 7) +
annotate("rect",
xmin = 1955, xmax = 2400, # SWIR 2
ymin = -Inf, ymax = Inf,  fill = "grey2", alpha = 0.1) +
annotate("text", x = 2170:2171, y = 0.2, label = "SWIR2", size  = 7) +
theme_minimal() +
theme(
legend.position = "right",
legend.text = element_text(size = 18),
legend.title = element_text(size = 20),
axis.text = element_text(size = 17, colour = "black"),
axis.title = element_text(size = 20),
plot.title = element_text(size = 20, vjust = -12, hjust = 0.05),
plot.subtitle = element_text(size = 20, vjust = -10, hjust = 0.05)
)
p_ps_K
#| eval: true
### Save results
pdf(file = "../output/Fig_NIMBioS_K_phyloSignal.pdf",
height = 7, width = 10)
p_ps_K
dev.off()
